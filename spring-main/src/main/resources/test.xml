<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "https://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>

	<!--<bean id="dog" class="com.wtf.po.Dog" autowire="byType">-->
		<!--<property name="name" value="小奶狗"></property>-->
	<!--</bean>-->
	<!--scope="prototype"-->
	<bean id="cat" class="com.wtf.po.Cat" autowire="byType">
		<property name="name" value="小喵喵"></property>
	</bean>
	<!--<bean id="cat" class="com.wtf.po.Cat"  autowire="byName">-->
		<!--<property name="name" value="小喵喵"></property>-->
	<!--</bean>-->
	<!--<bean id="cat" class="com.wtf.po.Cat"  autowire="byType">-->
		<!--<property name="name" value="小喵喵"></property>-->
	<!--</bean>-->
	<bean id="mouse" class="com.wtf.po.Mouse">
		<property name="name" value="小鼠鼠"></property>
	</bean>
	<bean id="mouse1" class="com.wtf.po.Mouse">
		<property name="name" value="小豚鼠"></property>
	</bean>

	<!--
		Check automatic creation of alias, to allow for names that are illegal as XML ids.
	-->
	<!--<bean id="aliased" class="  org.springframework.tests.sample.beans.TestBean  " name="myalias">-->
		<!--<property name="name"><value>aliased</value></property>-->
	<!--</bean>-->

	<!--<alias name="aliased" alias="youralias"/>-->

	<!--<alias name="multiAliased" alias="alias3"/>-->

	<!--<bean id="multiAliased" class="org.springframework.tests.sample.beans.TestBean" name="alias1,alias2">-->
		<!--<property name="name"><value>aliased</value></property>-->
	<!--</bean>-->

	<!--<alias name="multiAliased" alias="alias4"/>-->

	<!--<bean class="org.springframework.tests.sample.beans.TestBean" name="aliasWithoutId1,aliasWithoutId2,aliasWithoutId3">-->
		<!--<property name="name"><value>aliased</value></property>-->
	<!--</bean>-->

	<!--<bean class="org.springframework.tests.sample.beans.TestBean">-->
		<!--<property name="name"><null/></property>-->
	<!--</bean>-->

	<!--<bean class="org.springframework.beans.factory.xml.DummyReferencer"/>-->

	<!--<bean class="org.springframework.beans.factory.xml.DummyReferencer"/>-->

	<!--<bean class="org.springframework.beans.factory.xml.DummyReferencer"/>-->

	<!--<bean id="rod" class="org.springframework.tests.sample.beans.TestBean">-->
		<!--<property name="name"><value>&lt;!&ndash; a comment &ndash;&gt;Rod</value></property>-->
		<!--<property name="age"><value>31</value></property>-->
		<!--<property name="spouse"><ref bean="father"/></property>-->
		<!--<property name="touchy"><value/></property>-->
	<!--</bean>-->

	<!--<bean id="roderick" parent="rod">-->
		<!--<property name="name"><value>Roderick&lt;!&ndash; a comment &ndash;&gt;</value></property>-->
		<!--&lt;!&ndash; Should inherit age &ndash;&gt;-->
	<!--</bean>-->

	<!--<bean id="kerry" class="org.springframework.tests.sample.beans.TestBean">-->
		<!--<property name="name"><value>Ker&lt;!&ndash; a comment &ndash;&gt;ry</value></property>-->
		<!--<property name="age"><value>34</value></property>-->
		<!--<property name="spouse"><ref bean="rod"/></property>-->
		<!--<property name="touchy"><value></value></property>-->
	<!--</bean>-->

	<!--<bean id="kathy" class="org.springframework.tests.sample.beans.TestBean" scope="prototype">-->
		<!--<property name="name"><value>Kathy</value></property>-->
		<!--<property name="age"><value>28</value></property>-->
		<!--<property name="spouse"><ref bean="father"/></property>-->
	<!--</bean>-->

	<!--<bean id="typeMismatch" class="org.springframework.tests.sample.beans.TestBean" scope="prototype">-->
		<!--<property name="name"><value>typeMismatch</value></property>-->
		<!--<property name="age"><value>34x</value></property>-->
		<!--<property name="spouse"><ref bean="rod"/></property>-->
	<!--</bean>-->

	<!--&lt;!&ndash; Test of lifecycle callbacks &ndash;&gt;-->
	<!--<bean id="mustBeInitialized" class="org.springframework.tests.sample.beans.MustBeInitialized"/>-->

	<!--<bean id="lifecycle" class="org.springframework.tests.sample.beans.LifecycleBean"-->
		  <!--init-method="declaredInitMethod">-->
		<!--<property name="initMethodDeclared"><value>true</value></property>-->
	<!--</bean>-->

	<!--<bean id="protectedLifecycle" class="org.springframework.beans.factory.xml.ProtectedLifecycleBean"-->
		  <!--init-method="declaredInitMethod">-->
		<!--<property name="initMethodDeclared"><value>true</value></property>-->
	<!--</bean>-->

	<!--&lt;!&ndash; Factory beans are automatically treated differently &ndash;&gt;-->
	<!--<bean id="singletonFactory"	class="org.springframework.tests.sample.beans.factory.DummyFactory">-->
	<!--</bean>-->

	<!--<bean id="prototypeFactory"	class="org.springframework.tests.sample.beans.factory.DummyFactory">-->
		<!--<property name="singleton"><value>false</value></property>-->
	<!--</bean>-->

	<!--&lt;!&ndash; Check that the circular reference resolution mechanism doesn't break-->
	     <!--repeated references to the same FactoryBean &ndash;&gt;-->
	<!--<bean id="factoryReferencer" class="org.springframework.beans.factory.xml.DummyReferencer">-->
		<!--<property name="testBean1"><ref bean="singletonFactory"/></property>-->
		<!--<property name="testBean2"><ref bean="singletonFactory"/></property>-->
		<!--<property name="dummyFactory"><ref bean="&amp;singletonFactory"/></property>-->
	<!--</bean>-->

	<!--<bean id="factoryReferencerWithConstructor" class="org.springframework.beans.factory.xml.DummyReferencer">-->
		<!--<constructor-arg><ref bean="&amp;singletonFactory"/></constructor-arg>-->
		<!--<property name="testBean1"><ref bean="singletonFactory"/></property>-->
		<!--<property name="testBean2"><ref bean="singletonFactory"/></property>-->
	<!--</bean>-->

	<!--&lt;!&ndash; Check that the circular reference resolution mechanism doesn't break-->
	     <!--prototype instantiation &ndash;&gt;-->
	<!--<bean id="prototypeReferencer" class="org.springframework.beans.factory.xml.DummyReferencer" scope="prototype">-->
		<!--<property name="testBean1"><ref bean="kathy"/></property>-->
		<!--<property name="testBean2"><ref bean="kathy"/></property>-->
	<!--</bean>-->

	<!--<bean id="listenerVeto" class="org.springframework.tests.sample.beans.TestBean">-->
		<!--<property name="name"><value>listenerVeto</value></property>-->
		<!--<property name="age"><value>66</value></property>-->
	<!--</bean>-->

	<!--<bean id="validEmpty" class="org.springframework.tests.sample.beans.TestBean"/>-->

	<!--<bean id="commentsInValue" class="org.springframework.tests.sample.beans.TestBean">-->
	  <!--<property name="name"><value>this is&lt;!&ndash; don't mind me &ndash;&gt; a <![CDATA[&lt;!&ndash;comment&ndash;&gt;]]></value></property>-->
	<!--</bean>-->

</beans>
